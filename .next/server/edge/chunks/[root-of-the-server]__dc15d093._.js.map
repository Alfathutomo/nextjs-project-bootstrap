{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport type { NextRequest } from \"next/server\";\n\nexport function middleware(request: NextRequest) {\n  const token = request.cookies.get(\"token\")?.value;\n\n  const { pathname } = request.nextUrl;\n\n  // Allow public paths\n  if (pathname === \"/\" || pathname.startsWith(\"/api/auth\")) {\n    return NextResponse.next();\n  }\n\n  // Protect /admin routes\n  if (pathname.startsWith(\"/admin\")) {\n    if (!token) {\n      const loginUrl = new URL(\"/\", request.url);\n      return NextResponse.redirect(loginUrl);\n    }\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\"/admin/:path*\", \"/api/:path*\"],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU;IAE5C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,qBAAqB;IACrB,IAAI,aAAa,OAAO,SAAS,UAAU,CAAC,cAAc;QACxD,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,wBAAwB;IACxB,IAAI,SAAS,UAAU,CAAC,WAAW;QACjC,IAAI,CAAC,OAAO;YACV,MAAM,WAAW,IAAI,IAAI,KAAK,QAAQ,GAAG;YACzC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAC/B;IACF;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAiB;KAAc;AAC3C"}}]
}